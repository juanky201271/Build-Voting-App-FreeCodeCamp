{"version":3,"sources":["components/Logo.jsx","components/Links.jsx","components/NavBar.jsx","api/index.js","components/Chart.js","pages/PollsList.jsx","pages/PollsInsert.jsx","pages/PollsUpdate.jsx","pages/MyPollsList.jsx","pages/PollsDetails.jsx","app/index.js","index.js","logo.svg"],"names":["Wrapper","styled","a","attrs","className","Logo","href","target","src","logo","width","height","alt","Component","Collapse","div","List","Item","Log","Links","props","_handleLogoutClick","window","open","handleNotAuthenticated","setState","authenticated","twitterId","user","_handleLoginClick","state","ip","console","log","this","Fragment","to","pathname","onClick","Container","Nav","nav","Name","Pic","img","NavBar","_handleNotAuthenticated","name","profileImageUrl","api","axios","create","baseURL","apis","insertPoll","payload","post","getAllPolls","get","updatePollById","_id","put","deletePollById","delete","getPollById","insertUser","getAllUsers","updateUserById","updateUserByIp","deleteUserById","deleteUserByIp","getUserById","getUserByIp","getAllUsersTwitter","updateUserByTwitterId","getUserByTwitterId","Chart","componentDidMount","then","poll","labels","data","answers","map","item","ind","answer","label","question","votes","backgroundColor","hoverBackgroundColor","t","colors18","length","c","i","push","substr","dataChart","datasets","catch","error","options","title","display","text","fontSize","legend","position","Title","h1","PollsList","isLoading","fetch","method","credentials","headers","Accept","response","status","json","Error","responseJson","success","addUserIp","polls","err","columns","Header","accessor","filterable","Cell","value","ele","join","original","bind","showTable","loading","defaultPageSize","showPageSizeOptions","minRows","Label","InputText","input","Button","button","CancelButton","PollsInsert","handleChangeInputQuestion","event","handleChangeInputAnswers","handleIncludePoll","location","arrayAnswers","split","arrTemp","trim","res","alert","type","onChange","placeholder","PollsUpdate","handleUpdatePoll","filter","updateButtonRef","current","style","match","params","React","createRef","id","ref","Delete","DeletePoll","deleteUser","preventDefault","confirm","usersTwitter","forEach","upd","vot","itemVotes","indVotes","poll_id","users","reload","MyPollsList","p","toString","WrapperRigth","WrapperLeft","LabelExtra","LabelVoted","ShareButton","InputRadio","PollsDetails","handleChangeInputVote","vote","extraInputRef","handleChangeInputExtraOption","extraOption","handleVotePoll","payload2","payload3","userVotes","key","itemUser","indUser","answersHtml","shareButtonRef","url","handleShare","App","path","exact","component","from","ReactDOM","render","document","getElementById","module","exports"],"mappings":"sTAGA,IAAMA,EAAUC,IAAOC,EAAEC,MAAM,CAAEC,UAAW,gBAA5BH,CAAH,KAUEI,E,uKAPX,OACE,kBAACL,EAAD,CAASM,KAAK,uBAAuBC,OAAO,UAC1C,yBAAKC,IAAKC,IAAMC,MAAM,KAAKC,OAAO,KAAKC,IAAI,2C,GAJhCC,a,0SCAnB,IAAMC,EAAWb,IAAOc,IAAIZ,MAAM,CAAEC,UAAW,4BAA9BH,CAAH,KACRe,EAAOf,IAAOc,IAAIZ,MAAM,CAAEC,UAAW,sBAA9BH,CAAH,KACJgB,EAAOhB,IAAOc,IAAIZ,MAAM,CAAEC,UAAW,4BAA9BH,CAAH,KACJiB,EAAMjB,IAAOc,IAAIZ,MAAM,CAAEC,UAAW,gBAA9BH,CAAH,KAsHMkB,E,kDAjHb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IASRC,mBAAqB,WACnBC,OAAOC,KAAK,wCAAyC,SACrD,EAAKH,MAAMI,yBACX,EAAKC,SAAS,CAAEC,eAAe,EAAOC,UAAW,GAAIC,KAAM,MAb1C,EAenBC,kBAAoB,WAClBP,OAAOC,KAAK,yCAA0C,UAdtD,EAAKO,MAAQ,CACXJ,cAAe,EAAKN,MAAMM,eAAiB,GAC3CC,UAAW,EAAKP,MAAMO,WAAa,GACnCI,GAAI,EAAKX,MAAMW,IAAM,GACrBH,KAAM,EAAKR,MAAMQ,MAAQ,IANV,E,qDAmBjBI,QAAQC,IAAI,QAASC,KAAKJ,OADnB,MAEyCI,KAAKJ,MAA7CJ,EAFD,EAECA,cAAeC,EAFhB,EAEgBA,UAAWI,EAF3B,EAE2BA,GAAIH,EAF/B,EAE+BA,KACtC,OACE,kBAAC,IAAMO,SAAP,KACE,kBAAC,IAAD,CAAMC,GAAI,CAAEC,SAAU,SACVP,MAAO,CACLJ,cAAeA,EACfC,UAAWA,EACXI,GAAIA,EACJH,KAAMA,IAGlBxB,UAAU,gBARZ,sBAYA,kBAACU,EAAD,KACE,kBAACE,EAAD,KAEE,kBAACC,EAAD,KACE,kBAAC,IAAD,CAAMmB,GAAI,CAAEC,SAAU,SACVP,MAAO,CACLJ,cAAeA,EACfC,UAAWA,EACXI,GAAIA,EACJH,KAAMA,IAGlBxB,UAAU,YARZ,UAcF,kBAACa,EAAD,KAEIS,EACE,kBAAC,IAAD,CAAMU,GAAI,CAAEC,SAAU,WACVP,MAAO,CACLJ,cAAeA,EACfC,UAAWA,EACXI,GAAIA,EACJH,KAAMA,IAGlBxB,UAAU,YARZ,YAaA,+BAKN,kBAACa,EAAD,KAEES,EACE,kBAAC,IAAD,CAAMU,GAAI,CAAEC,SAAU,eACVP,MAAO,CACLJ,cAAeA,EACfC,UAAWA,EACXI,GAAIA,EACJH,KAAMA,IAGlBxB,UAAU,YARZ,eAaA,gCAOJsB,EACE,kBAACR,EAAD,CAAKoB,QAASJ,KAAKb,oBAAnB,kBAIA,kBAACH,EAAD,CAAKoB,QAASJ,KAAKL,mBAAnB,uB,GAvGMhB,a,wXCLpB,IAAM0B,EAAYtC,IAAOc,IAAIZ,MAAM,CAAEC,UAAW,aAA9BH,CAAH,KACTuC,EAAMvC,IAAOwC,IAAItC,MAAM,CAAEC,UAAW,+CAA9BH,CAAH,KAGHyC,EAAOzC,IAAOc,IAAV,KAKJ4B,EAAM1C,IAAO2C,IAAV,KA6DMC,E,kDAxDb,WAAYzB,GAAQ,IAAD,8BACjB,cAAMA,IASR0B,wBAA0B,WACxB,EAAKrB,SAAS,CAAEC,eAAe,EAAOC,UAAW,GAAIC,KAAM,MAT3D,EAAKE,MAAQ,CACXJ,cAAe,EAAKN,MAAMM,eAAiB,GAC3CC,UAAW,EAAKP,MAAMO,WAAa,GACnCI,GAAI,EAAKX,MAAMW,IAAM,GACrBH,KAAM,EAAKR,MAAMQ,MAAQ,IANV,E,qDAcjBI,QAAQC,IAAI,SAAUC,KAAKJ,OADpB,MAE0CI,KAAKJ,MAA9CJ,EAFD,EAECA,cAAeC,EAFhB,EAEgBA,UAAWI,EAF3B,EAE2BA,GAAIH,EAF/B,EAE+BA,KAChCmB,EAAOnB,EAAKmB,MAAQ,GACpBC,EAAkBpB,EAAKoB,iBAAmB,GAChD,OACE,kBAACT,EAAD,KACE,kBAACC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEd,cAAeA,EACfC,UAAWA,EACXI,GAAIA,EACJH,KAAMA,EACNJ,uBAAwBU,KAAKY,0BAE7BC,EAEE,kBAACL,EAAD,KAAOK,GAEP,8BAGFC,EAEE,kBAACL,EAAD,CAAKnC,IAAKwC,IAEV,8BAGFjB,EAEE,kBAACW,EAAD,KAAOX,GAEP,oC,GAhDOlB,a,wBCjBfoC,E,OAAMC,EAAMC,OAAO,CACvBC,QAAS,SA2CIC,EArBF,CACTC,WApBsB,SAAAC,GAAO,OAAIN,EAAIO,KAAJ,QAAkBD,IAqBnDE,YApBuB,kBAAMR,EAAIS,IAAJ,WAqB7BC,eApB0B,SAACC,EAAKL,GAAN,OAAkBN,EAAIY,IAAJ,gBAAiBD,GAAOL,IAqBpEO,eApB0B,SAAAF,GAAG,OAAIX,EAAIc,OAAJ,gBAAoBH,KAqBrDI,YApBuB,SAAAJ,GAAG,OAAIX,EAAIS,IAAJ,gBAAiBE,KAsB/CK,WApBsB,SAAAV,GAAO,OAAIN,EAAIO,KAAJ,QAAkBD,IAqBnDW,YApBuB,kBAAMjB,EAAIS,IAAJ,WAqB7BS,eApB0B,SAACP,EAAKL,GAAN,OAAkBN,EAAIY,IAAJ,mBAAoBD,GAAOL,IAqBvEa,eApB0B,SAACrC,EAAIwB,GAAL,OAAiBN,EAAIY,IAAJ,mBAAoB9B,GAAMwB,IAqBrEc,eApB0B,SAAAT,GAAG,OAAIX,EAAIc,OAAJ,mBAAuBH,KAqBxDU,eApB0B,SAAAvC,GAAE,OAAIkB,EAAIc,OAAJ,mBAAuBhC,KAqBvDwC,YApBuB,SAAAX,GAAG,OAAIX,EAAIS,IAAJ,mBAAoBE,KAqBlDY,YApBuB,SAAAzC,GAAE,OAAIkB,EAAIS,IAAJ,mBAAoB3B,KAsBjD0C,mBApB8B,kBAAMxB,EAAIS,IAAJ,kBAqBpCgB,sBApBiC,SAAC/C,EAAW4B,GAAZ,OAAwBN,EAAIY,IAAJ,0BAA2BlC,GAAa4B,IAqBjGoB,mBApB8B,SAAAhD,GAAS,OAAIsB,EAAIS,IAAJ,0BAA2B/B,MCsD3DiD,E,kDAxEb,WAAYxD,GAAQ,IAAD,8BACjB,cAAMA,IASRyD,kBAVmB,sBAUC,4BAAA3E,EAAA,6DACV0D,EAAQ,EAAK9B,MAAb8B,IADU,SAEZX,EAAIe,YAAYJ,GAAKkB,MAAK,SAAAC,GAQ9B,IAPA,IAAMC,EAASD,EAAKE,KAAKA,KAAKC,QAAQC,KAAI,SAACC,EAAMC,GAAP,OAAeD,EAAKE,UACxDC,EAAQR,EAAKE,KAAKA,KAAKO,SACvBP,EAAOF,EAAKE,KAAKA,KAAKC,QAAQC,KAAI,SAACC,EAAMC,GAAP,OAAeD,EAAKK,SACxDC,EAAkB,GAClBC,EAAuB,GACvBC,EAAI,EAAKC,SAASC,OAClBC,EAAI,EACCC,EAAI,EAAGA,EAAIjB,EAAKE,KAAKA,KAAKC,QAAQY,OAAQE,IACjDN,EAAgBO,KAAK,EAAKJ,SAASG,IACnCL,EAAqBM,KAAK,EAAKJ,SAASG,GAAGE,OAAO,EAAE,GAAK,EAAKL,SAASG,GAAGE,OAAO,EAAE,GAAK,EAAKL,SAASG,GAAGE,OAAO,EAAE,MAClHH,IACUH,IACRG,EAAI,GAIR,IAAMI,EAAY,CAChBnB,OAAO,YAAKA,GACZoB,SAAU,CACR,CACEb,MAAOA,EACPG,gBAAiBA,EACjBC,qBAAsBA,EACtBV,KAAK,YAAKA,MAIhB,EAAKxD,SAAS,CACZ0E,UAAWA,EACXX,SAAUD,OAGbc,OAAM,SAAAC,GACLtE,QAAQC,IAAIqE,MApCI,2CARlB,EAAKxE,MAAQ,CACX8B,IAAK,EAAKxC,MAAMwC,IAChBuC,UAAW,GACXX,SAAU,IAEZ,EAAKK,SAAW,CAAC,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAC/F,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,WARjE,E,qDAiDT,IAAD,EACyB3D,KAAKJ,MAA7BqE,EADD,EACCA,UAAWX,EADZ,EACYA,SACnB,OACE,6BACG,kBAAC,IAAD,CACEP,KAAMkB,EACNI,QAAS,CACPC,MAAM,CACJC,SAAQ,EACRC,KAAK,kBAAoBlB,EACzBmB,SAAS,IAEXC,OAAO,CACLH,SAAQ,EACRI,SAAS,iB,GAhEJhG,a,oLCGpB,IAAMb,EAAUC,IAAOc,IAAV,KACP+F,EAAQ7G,IAAO8G,GAAG5G,MAAM,CAAEC,UAAW,MAA7BH,CAAH,KAkKI+G,E,kDA/JX,WAAY5F,GAAQ,IAAD,8BACf,cAAMA,IAWVyD,kBAZmB,sBAYC,sBAAA3E,EAAA,6DAChB,EAAKuB,SAAS,CAAEwF,WAAW,IADX,SAGVC,MAAM,0BAA2B,CACrCC,OAAQ,MACRC,YAAa,UACbC,QAAS,CACPC,OACA,mBACA,eAAgB,mBAChB,oCAAoC,KAGrCxC,MAAK,SAAAyC,GACJ,GAAwB,MAApBA,EAASC,OAAgB,OAAOD,EAASE,OAC7C,MAAM,IAAIC,MAAM,kCAEjB5C,MAAK,SAAA6C,IAEyB,IAAzBA,EAAaC,QACf,EAAKnG,SAAS,CACZC,eAAe,EACfC,UAAWgG,EAAa/F,KAAKD,UAC7BI,GAAI4F,EAAa5F,GACjBH,KAAM+F,EAAa/F,OAGrB,EAAKH,SAAS,CACZC,eAAe,EACfC,UAAW,GACXI,GAAI4F,EAAa5F,GACjBH,KAAM,QAIXyE,OAAM,SAAAC,GACLtE,QAAQC,IAAIqE,MApCA,cAuChB,EAAKuB,YAvCW,SAyCV5E,EAAIQ,cAAcqB,MAAK,SAAAgD,GACzB,EAAKrG,SAAS,CACVqG,MAAOA,EAAM7C,KAAKA,KAClBgC,WAAW,OAGlBZ,OAAM,SAAAC,GACLtE,QAAQC,IAAIqE,MAhDE,2CAZD,EAgEnBuB,UAhEmB,sBAgEP,8BAAA3H,EAAA,2DACF6B,EAAO,EAAKD,MAAZC,IADE,iCAGkBkB,EAAIuB,YAAYzC,GAAIsE,OAAM,SAAA0B,GAAG,OAAI/F,QAAQC,IAAI8F,MAH/D,yCAMAxE,EAAU,CACdxB,GAAIA,EACJ0D,MAAO,IARH,SAUgBxC,EAAIgB,WAAWV,GAAS8C,OAAM,SAAA0B,GAAG,OAAI/F,QAAQC,IAAI8F,MAVjE,kGA9DR,EAAKjG,MAAQ,CACTgG,MAAO,GACPE,QAAS,GACTf,WAAW,EACXvF,cAAe,GACfC,UAAW,GACXI,GAAI,GACJH,KAAM,IATK,E,qDAyFjBI,QAAQC,IAAI,QAASC,KAAKJ,OADnB,MAEwBI,KAAKJ,MAA1BgG,EAFH,EAEGA,MAAOb,EAFV,EAEUA,UACTe,EAAU,CACZ,CACIC,OAAQ,KACRC,SAAU,MACVC,YAAY,GAEhB,CACIF,OAAQ,WACRC,SAAU,WACVC,YAAY,GAEhB,CACIF,OAAQ,UACRC,SAAU,UACVE,KAAM,SAAShH,GACb,OACI,8BACGA,EAAMiH,MAAMvC,OAAS,EAAK1E,EAAMiH,MAAMlD,KAAI,SAACmD,EAAKjD,GAAN,OAAciD,EAAIhD,UAAQiD,KAAK,OAAWnH,EAAMiH,MAAMlD,KAAI,SAACmD,EAAKjD,GAAN,OAAciD,EAAIhD,aAKnI,CACI2C,OAAQ,GACRC,SAAU,GACVE,KAAM,SAAShH,GACX,OACE,8BACE,kBAAC,IAAMe,SAAP,KACE,kBAAC,IAAD,CAAMC,GAAI,CAAEC,SAAS,iBAAD,OAAmBjB,EAAMoH,SAAS5E,KAC9C9B,MAAO,CACLJ,cAAeQ,KAAKJ,MAAMJ,cAC1BC,UAAWO,KAAKJ,MAAMH,UACtBI,GAAIG,KAAKJ,MAAMC,GACfH,KAAMM,KAAKJ,MAAMF,OAGrBxB,UAAU,YARhB,cAYRqI,KAAKvG,QAIXwG,GAAY,EAKhB,OAJKZ,EAAMhC,SACP4C,GAAY,GAIZ,kBAAC,EAAD,KACI,kBAAC5B,EAAD,cACC4B,IAAczB,GACX,kBAAC,IAAD,CACIhC,KAAM6C,EACNE,QAASA,EACTW,QAAS1B,EACT2B,gBAAiB,GACjBC,qBAAqB,EACrBC,QAAS,S,GAxJTjI,a,uiBCNxB,IAAMiG,GAAQ7G,IAAO8G,GAAG5G,MAAM,CAAEC,UAAW,MAA7BH,CAAH,MACLD,GAAUC,IAAOc,IAAIZ,MAAM,CAAEC,UAAW,cAA9BH,CAAH,MAGP8I,GAAQ9I,IAAOsF,MAAV,MACLyD,GAAY/I,IAAOgJ,MAAM9I,MAAM,CAAEC,UAAW,gBAAhCH,CAAH,MAGTiJ,GAASjJ,IAAOkJ,OAAOhJ,MAAM,CAAEC,UAAU,mBAAhCH,CAAH,MAGNmJ,GAAenJ,IAAOC,EAAEC,MAAM,CAAEC,UAAU,kBAA3BH,CAAH,KA0EHoJ,G,kDArEX,WAAYjI,GAAQ,IAAD,8BACf,cAAMA,IAMVkI,0BAA4B,SAAAC,GACxB,IAAM/D,EAAW+D,EAAMhJ,OAAO8H,MAC9B,EAAK5G,SAAS,CAAE+D,cATD,EAWnBgE,yBAA2B,SAAAD,GACvB,IAAMrE,EAAUqE,EAAMhJ,OAAO8H,MAC7B,EAAK5G,SAAS,CAAEyD,aAbD,EAenBuE,kBAfmB,sBAeC,4CAAAvJ,EAAA,+DACe,EAAK4B,MAA5B0D,EADQ,EACRA,SAAUN,EADF,EACEA,QADF,EAEW,EAAK9D,MAAMsI,SAAS5H,MAAvCH,EAFQ,EAERA,UAAWI,EAFH,EAEGA,GACb4H,EAAezE,EAAQ0E,MAAM,KAE/BC,EAAU,GACdF,EAAaxE,KAAI,SAACmD,EAAKjD,GACrB,OAAQwE,EAAQ5D,KAAK,CAAEX,OAAQgD,EAAIwB,OAAQrE,MAAO,OAG9ClC,EAAU,CAAEiC,SAAUA,EAAUN,QAAS2E,EAAS9H,GAAIA,EAAIJ,UAAWA,GAV3D,SAYVsB,EAAIK,WAAWC,GAASuB,MAAK,SAAAiF,GAC/BzI,OAAO0I,MAAP,8BACA,EAAKvI,SAAS,CACZ+D,SAAU,GACVN,QAAS,QAGdmB,OAAM,SAAAC,GACLtE,QAAQC,IAAIqE,MApBE,OAuBhBhF,OAAOoI,SAASpJ,KAAO,WAvBP,2CAbhB,EAAKwB,MAAQ,CACT0D,SAAU,GACVN,QAAS,IAJE,E,qDAyCjBlD,QAAQC,IAAI,SAAUC,KAAKJ,OADpB,MAEyBI,KAAKJ,MAA3B0D,EAFH,EAEGA,SAAUN,EAFb,EAEaA,QAClB,OACI,kBAAC,GAAD,KACI,kBAAC,GAAD,oBAEA,kBAAC6D,GAAD,mBACA,kBAACC,GAAD,CACIiB,KAAK,OACL5B,MAAO7C,EACP0E,SAAUhI,KAAKoH,4BAGnB,kBAACP,GAAD,kBACA,kBAACC,GAAD,CACIiB,KAAK,OACL5B,MAAOnD,EACPiF,YAAY,gCACZD,SAAUhI,KAAKsH,2BAGnB,kBAACN,GAAD,CAAQ5G,QAASJ,KAAKuH,mBAAtB,YACA,kBAACL,GAAD,CAAc9I,KAAM,YAApB,e,GAhEUO,a,skBCf1B,IAAMiG,GAAQ7G,IAAO8G,GAAG5G,MAAM,CAAEC,UAAW,MAA7BH,CAAH,MACLD,GAAUC,IAAOc,IAAIZ,MAAM,CAAEC,UAAW,cAA9BH,CAAH,MAGP8I,GAAQ9I,IAAOsF,MAAV,MAGLyD,GAAY/I,IAAOgJ,MAAM9I,MAAM,CAAEC,UAAW,gBAAhCH,CAAH,MAGTiJ,GAASjJ,IAAOkJ,OAAOhJ,MAAM,CAAEC,UAAU,mBAAhCH,CAAH,MAINmJ,GAAenJ,IAAOC,EAAEC,MAAM,CAAEC,UAAU,kBAA3BH,CAAH,MAkGHmK,G,kDA7FX,WAAYhJ,GAAQ,IAAD,8BACf,cAAMA,IASVkI,0BAA4B,SAAAC,GACxB,IAAM/D,EAAW+D,EAAMhJ,OAAO8H,MAC9B,EAAK5G,SAAS,CAAE+D,cAZD,EAcnBgE,yBAA2B,SAAAD,GACvB,IAAMrE,EAAUqE,EAAMhJ,OAAO8H,MAC7B,EAAK5G,SAAS,CAAEyD,aAhBD,EAkBnBmF,iBAlBmB,sBAkBA,wCAAAnK,EAAA,+DACmB,EAAK4B,MAAjC8B,EADS,EACTA,IAAK4B,EADI,EACJA,SAAUN,EADN,EACMA,QACjByE,EAAezE,EAAQ0E,MAAM,KAC/BC,EAAU,GACdF,EAAaxE,KAAI,SAACmD,EAAKjD,GACrB,OAAQwE,EAAQ5D,KAAK,CAAEX,OAAQgD,EAAIwB,OAAQrE,MAAO,OAE9ClC,EAAU,CAAEiC,WAAUN,QAAS2E,GAPpB,SASX5G,EAAIU,eAAeC,EAAKL,GAASuB,MAAK,SAAAiF,GAC1CzI,OAAO0I,MAAP,6BACA,EAAKvI,SAAS,CACZ+D,SAAU,GACVN,QAAS,GACTO,MAAO,QAGVY,OAAM,SAAAC,GACLtE,QAAQC,IAAIqE,MAlBG,OAqBjBhF,OAAOoI,SAASpJ,KAAO,WArBN,2CAlBA,EAyCnBuE,kBAzCmB,sBAyCC,gCAAA3E,EAAA,+DACG,EAAK4B,MAApB8B,EADY,EACZA,IAAK6B,EADO,EACPA,MADO,SAEZxC,EAAIe,YAAYJ,GAAKkB,MAAK,SAAAC,GAC9BU,EAAQV,EAAKE,KAAKA,KAAKC,QAAQC,KAAI,SAACmD,EAAKjD,GAAN,OAAciD,EAAI7C,SACrD,EAAKhE,SAAS,CACZ+D,SAAUT,EAAKE,KAAKA,KAAKO,SACzBN,QAASH,EAAKE,KAAKA,KAAKC,QAAQC,KAAI,SAACmD,EAAKjD,GAAN,OAAciD,EAAIhD,OAAOwE,UAAQvB,KAAK,OAC1E9C,MAAOV,EAAKE,KAAKA,KAAKC,QAAQC,KAAI,SAACmD,EAAKjD,GAAN,OAAciD,EAAI7C,cAGvDY,OAAM,SAAAC,GACLtE,QAAQC,IAAIqE,MAXI,OAcEb,EAAM6E,QAAO,SAAChC,EAAKjD,GACrC,OAAOiD,EAAM,KAECxC,OAAS,GAAK,EAAKyE,gBAAgBC,UACjD,EAAKD,gBAAgBC,QAAQC,MAAMhE,QAAU,QAlB7B,2CAvChB,EAAK3E,MAAQ,CACT8B,IAAK,EAAKxC,MAAMsJ,MAAMC,OAAO/G,IAC7B4B,SAAU,GACVN,QAAS,GACTO,MAAO,IAEX,EAAK8E,gBAAkBK,IAAMC,YARd,E,qDAgEf7I,QAAQC,IAAI,SAAUC,KAAKJ,OADtB,MAE0BI,KAAKJ,MAA5B0D,EAFH,EAEGA,SAAUN,EAFb,EAEaA,QAElB,OACI,kBAAC,GAAD,KACI,kBAAC,GAAD,oBAEA,kBAAC,GAAD,mBACA,kBAAC,GAAD,CACI+E,KAAK,OACL5B,MAAO7C,EACP0E,SAAUhI,KAAKoH,4BAGnB,kBAAC,GAAD,kBACA,kBAAC,GAAD,CACIW,KAAK,OACL5B,MAAOnD,EACPiF,YAAY,gCACZD,SAAUhI,KAAKsH,2BAGnB,kBAAC,GAAD,CAAQsB,GAAG,eAAexI,QAASJ,KAAKmI,iBAAkBU,IAAK7I,KAAKqI,iBAApE,eACA,kBAAC,GAAD,CAAcjK,KAAM,YAApB,e,GAxFUO,a,mRCf1B,IAAMb,GAAUC,IAAOc,IAAV,MACP+F,GAAQ7G,IAAO8G,GAAG5G,MAAM,CAAEC,UAAW,MAA7BH,CAAH,MACL+K,GAAS/K,IAAOc,IAAV,MAENkK,G,4MACJC,W,uCAAa,WAAM3B,GAAN,qBAAArJ,EAAA,yDACXqJ,EAAM4B,iBADK,EAEoB,EAAK/J,MAA7BO,EAFI,EAEJA,UAAWI,EAFP,EAEOA,GAAI6B,EAFX,EAEWA,KAClBtC,OAAO8J,QAAP,yCAAiDxH,EAAjD,kBAHO,iCAKHX,EAAIa,eAAeF,GACxByC,OAAM,SAAAC,GACLtE,QAAQC,IAAIqE,MAPL,uBAUHrD,EAAIwB,qBAAqBK,MAAK,SAAAuG,GAClCA,EAAapG,KAAKA,KAAKqG,SAAQ,SAAClG,EAAMC,GACpC,IAAIkG,GAAM,EACNC,EAAMpG,EAAKK,MAAMN,KAAI,SAACsG,EAAWC,GACnC,OAAID,EAAUE,UAAY/H,GACxB2H,GAAM,EACE,CAAEI,QAAS,GAAIrG,OAAQ,KAEvB,CAAEqG,QAASF,EAAUE,QAASrG,OAAQmG,EAAUnG,WAG5D,GAAIiG,EAAK,CACP,IAAIhI,EAAU,CAAEkC,MAAO+F,GACvBvI,EAAIyB,sBAAsB/C,EAAW4B,GACpC8C,OAAM,SAAAC,GACLtE,QAAQC,IAAIqE,aAKnBD,OAAM,SAAAC,GACLtE,QAAQC,IAAIqE,MA/BL,uBAkCHrD,EAAIiB,cAAcY,MAAK,SAAA8G,GAC3BA,EAAM3G,KAAKA,KAAKqG,SAAQ,SAAClG,EAAMC,GAC7B,IAAIkG,GAAM,EACNC,EAAMpG,EAAKK,MAAMN,KAAI,SAACsG,EAAWC,GACnC,OAAID,EAAUE,UAAY/H,GACxB2H,GAAM,EACE,CAAEI,QAAS,GAAIrG,OAAQ,KAEvB,CAAEqG,QAASF,EAAUE,QAASrG,OAAQmG,EAAUnG,WAG5D,GAAIiG,EAAK,CACP,IAAIhI,EAAU,CAAEkC,MAAO+F,GACvBvI,EAAImB,eAAerC,EAAIwB,GACtB8C,OAAM,SAAAC,GACLtE,QAAQC,IAAIqE,aAKnBD,OAAM,SAAAC,GACLtE,QAAQC,IAAIqE,MAvDL,OA0DThF,OAAOoI,SAASmC,SA1DP,4C,6GA8DX,OAAO,kBAACb,GAAD,CAAQ1I,QAASJ,KAAKgJ,YAAtB,c,GA/DcrK,aAmNViL,G,kDA/IX,WAAY1K,GAAQ,IAAD,8BACf,cAAMA,IAOVyD,kBARmB,sBAQC,4BAAA3E,EAAA,6DAClB,EAAKuB,SAAS,CAAEwF,WAAW,IAEnBtF,EAAc,EAAKP,MAAMsI,SAAS5H,MAAlCH,UAHU,SAIZsB,EAAIQ,cAAcqB,MAAK,SAAAgD,GAC3B,IAAIiE,EAAIjE,EAAM7C,KAAKA,KAEjB8G,EADEpK,EACEoK,EAAEzB,QAAO,SAASlF,GACpB,OAAOA,EAAKzD,YAAcA,EAAUqK,cAGlC,GAEN,EAAKvK,SAAS,CACVqG,MAAOiE,EACP9E,WAAW,OAGhBZ,OAAM,SAAAC,GACLtE,QAAQC,IAAIqE,MAnBI,2CANhB,EAAKxE,MAAQ,CACTgG,MAAO,GACPE,QAAS,GACTf,WAAW,GALA,E,qDAgCjBjF,QAAQC,IAAI,WAAYC,KAAKJ,OADtB,MAEwBI,KAAKJ,MAA1BgG,EAFH,EAEGA,MAAOb,EAFV,EAEUA,UACTe,EAAU,CACZ,CACIC,OAAQ,KACRC,SAAU,MACVC,YAAY,GAEhB,CACIF,OAAQ,WACRC,SAAU,WACVC,YAAY,GAEhB,CACIF,OAAQ,UACRC,SAAU,UACVE,KAAM,SAAShH,GACb,OACI,8BACGA,EAAMiH,MAAMvC,OAAS,EAEnB1E,EAAMiH,MAAMlD,KAAI,SAACmD,EAAKjD,GAAN,OAAciD,EAAIhD,UAAQiD,KAAK,OAE/CnH,EAAMiH,MAAMlD,KAAI,SAACmD,EAAKjD,GAAN,OAAciD,EAAIhD,aAKjD,CACI2C,OAAQ,GACRC,SAAU,GACVE,KAAM,SAAShH,GACX,OACI,8BACI,kBAAC,GAAD,CACEwC,IAAKxC,EAAMoH,SAAS5E,IACpBlC,cAAeQ,KAAKd,MAAMsI,SAAS5H,MAAMJ,cACzCC,UAAWO,KAAKd,MAAMsI,SAAS5H,MAAMH,UACrCI,GAAIG,KAAKd,MAAMsI,SAAS5H,MAAMC,GAC9BH,KAAMM,KAAKd,MAAMsI,SAAS5H,MAAMF,SAG5C6G,KAAKvG,OAEX,CACI+F,OAAQ,GACRC,SAAU,GACVE,KAAM,SAAShH,GACX,OACI,8BACE,kBAAC,IAAMe,SAAP,KACE,kBAAC,IAAD,CAAMC,GAAI,CAAEC,SAAS,gBAAD,OAAkBjB,EAAMoH,SAAS5E,KAC7C9B,MAAO,CACLJ,cAAeQ,KAAKd,MAAMsI,SAAS5H,MAAMJ,cACzCC,UAAWO,KAAKd,MAAMsI,SAAS5H,MAAMH,UACrCI,GAAIG,KAAKd,MAAMsI,SAAS5H,MAAMC,GAC9BH,KAAMM,KAAKd,MAAMsI,SAAS5H,MAAMF,OAGpCxB,UAAU,YARhB,aAYVqI,KAAKvG,OAEX,CACI+F,OAAQ,GACRC,SAAU,GACVE,KAAM,SAAShH,GACX,OACI,8BACE,kBAAC,IAAMe,SAAP,KACE,kBAAC,IAAD,CAAMC,GAAI,CAAEC,SAAS,iBAAD,OAAmBjB,EAAMoH,SAAS5E,KAC9C9B,MAAO,CACLJ,cAAeQ,KAAKd,MAAMsI,SAAS5H,MAAMJ,cACzCC,UAAWO,KAAKd,MAAMsI,SAAS5H,MAAMH,UACrCI,GAAIG,KAAKd,MAAMsI,SAAS5H,MAAMC,GAC9BH,KAAMM,KAAKd,MAAMsI,SAAS5H,MAAMF,OAGpCxB,UAAU,YARhB,cAYVqI,KAAKvG,QAIXwG,GAAY,EAKhB,OAJKZ,EAAMhC,SACP4C,GAAY,GAIZ,kBAAC,GAAD,KACI,kBAAC,GAAD,iBACCA,IAAczB,GACX,kBAAC,IAAD,CACIhC,KAAM6C,EACNE,QAASA,EACTW,QAAS1B,EACT2B,gBAAiB,GACjBC,qBAAqB,EACrBC,QAAS,S,GAxIPjI,a,w5CCzE1B,IAAMiG,GAAQ7G,IAAO8G,GAAG5G,MAAM,CAAEC,UAAW,MAA7BH,CAAH,MACLD,GAAUC,IAAOc,IAAIZ,MAAM,CAAEC,UAAW,cAA9BH,CAAH,MAOPgM,GAAehM,IAAOc,IAAIZ,MAAM,CAAEC,UAAW,cAA9BH,CAAH,MAKZiM,GAAcjM,IAAOc,IAAIZ,MAAM,CAAEC,UAAW,cAA9BH,CAAH,MAKX8I,GAAQ9I,IAAOsF,MAAV,MAGL4G,GAAalM,IAAOsF,MAAV,MAIV6G,GAAanM,IAAOsF,MAAV,MAKV8G,GAAcpM,IAAOkJ,OAAOhJ,MAAM,CAAEC,UAAW,gBAAjCH,CAAH,MAIXiJ,GAASjJ,IAAOkJ,OAAOhJ,MAAM,CAAEC,UAAW,mBAAjCH,CAAH,MAINmJ,GAAenJ,IAAOC,EAAEC,MAAM,CAAEC,UAAW,kBAA5BH,CAAH,MAGZ+I,GAAY/I,IAAOgJ,MAAM9I,MAAM,CAAEC,UAAW,gBAAhCH,CAAH,MAITqM,GAAarM,IAAOgJ,MAAM9I,MAAM,CAAE8J,KAAM,SAA3BhK,CAAH,MA4MDsM,G,kDAvMX,WAAYnL,GAAQ,IAAD,8BACf,cAAMA,IAiBVoL,sBAlBmB,uCAkBK,WAAMjD,GAAN,eAAArJ,EAAA,sDACduM,EAAOlD,EAAMhJ,OAAO8H,MAC1B,EAAK5G,SAAS,CAAEgL,SACQ,gBAApBlD,EAAMhJ,OAAOuK,GACf,EAAK4B,cAAclC,QAAQC,MAAMhE,QAAU,UAE3C,EAAKiG,cAAclC,QAAQC,MAAMhE,QAAU,OANzB,2CAlBL,wDA2BnBkG,6BAA+B,SAAApD,GAC3B,IAAMqD,EAAcrD,EAAMhJ,OAAO8H,MACjC,EAAK5G,SAAS,CAAEmL,iBA7BD,EA+BnBC,eA/BmB,sBA+BF,oDAAA3M,EAAA,2DACsE,EAAK4B,MAAlF8B,EADO,EACPA,IAAK4B,EADE,EACFA,SAAUN,EADR,EACQA,QAAS0H,EADjB,EACiBA,YAAaH,EAD9B,EAC8BA,KAAM/K,EADpC,EACoCA,cAAeC,EADnD,EACmDA,UAAWI,EAD9D,EAC8DA,GACxE0K,EAFU,oDAGVG,GAA+B,6BAAhBH,EAAK3C,OAHV,wDAKXD,EAAU,GACd3E,EAAQC,KAAI,SAACmD,EAAKjD,GAChB,OAAIiD,EAAIhD,OAAOwE,SAAW2C,EAAK3C,OACrBD,EAAQ5D,KAAK,CAAEX,OAAQgD,EAAIhD,OAAOwE,OAAQrE,MAAO6C,EAAI7C,MAAQ,IAE7DoE,EAAQ5D,KAAK,CAAEX,OAAQgD,EAAIhD,OAAOwE,OAAQrE,MAAO6C,EAAI7C,WAG7DmH,GAA+B,6BAAhBH,EAAK3C,QAAuCD,EAAQ5D,KAAK,CAAEX,OAAQsH,EAAanH,MAAO,IACpGlC,EAAU,CAAEiC,WAAUN,QAAS2E,GAdtB,UAgBT5G,EAAIU,eAAeC,EAAKL,GAASuB,MAAK,SAAAiF,GAC1CzI,OAAO0I,MAAP,8BAED3D,OAAM,SAAAC,GACLtE,QAAQC,IAAIqE,MApBC,WAsBfuD,EAAU,IACNnI,EAvBW,kCAyBPuB,EAAI0B,mBAAmBhD,GAAWmD,MAAK,SAAAlD,IAE3CiI,EAAUjI,EAAKqD,KAAKA,KAAKQ,OAAS,IAC1BQ,KAAK,CAAE0F,QAAS/H,EACtB0B,OAA0B,6BAAhBmH,EAAK3C,OAAwC8C,EAAcH,EAAK3C,YAE7EzD,OAAM,SAAAC,GACLtE,QAAQC,IAAIqE,MAhCD,eAkCPwG,EAAW,CAAErH,MAAOoE,GAlCb,UAmCP5G,EAAIyB,sBAAsB/C,EAAWmL,GAC1CzG,OAAM,SAAAC,GACLtE,QAAQC,IAAIqE,MArCD,iDAyCPrD,EAAIuB,YAAYzC,GAAI+C,MAAK,SAAAlD,IAE7BiI,EAAUjI,EAAKqD,KAAKA,KAAKQ,OAAS,IAC1BQ,KAAK,CAAE0F,QAAS/H,EACtB0B,OAA0B,6BAAhBmH,EAAK3C,OAAwC8C,EAAcH,EAAK3C,YAE7EzD,OAAM,SAAAC,GACLtE,QAAQC,IAAIqE,MAhDD,eAkDPyG,EAAW,CAAEtH,MAAOoE,GAlDb,UAmDP5G,EAAImB,eAAerC,EAAIgL,GAC5B1G,OAAM,SAAAC,GACLtE,QAAQC,IAAIqE,MArDD,QAyDfhF,OAAOoI,SAASpJ,KAAO,WAzDR,4CA/BE,EA0FnBuE,kBA1FmB,sBA0FC,sCAAA3E,EAAA,2DACsC,EAAK4B,MAAvD8B,EADY,EACZA,IAAKlC,EADO,EACPA,cAAeC,EADR,EACQA,UAAWI,EADnB,EACmBA,GAAIiL,EADvB,EACuBA,WAErCtL,EAHc,gCAKVuB,EAAI0B,mBAAmBhD,GAAWmD,MAAK,SAAAlD,GAC3CoL,EAAYpL,EAAKqD,KAAKA,KAAKQ,OAAS,GACpC,EAAKhE,SAAS,CACZuL,UAAWpL,EAAKqD,KAAKA,KAAKQ,OAAS,QAGtCY,OAAM,SAAAC,GACLtE,QAAQC,IAAIqE,MAZE,6CAgBVrD,EAAIuB,YAAYzC,GAAI+C,MAAK,SAAAlD,GAC7BoL,EAAYpL,EAAKqD,KAAKA,KAAKQ,OAAS,GACpC,EAAKhE,SAAS,CACZuL,UAAWpL,EAAKqD,KAAKA,KAAKQ,OAAS,QAGtCY,OAAM,SAAAC,GACLtE,QAAQC,IAAIqE,MAvBE,wBA2BZrD,EAAIe,YAAYJ,GAAKkB,MAAK,SAAAC,GAC9B,IAAM4E,EAAe5E,EAAKE,KAAKA,KAAKC,QAAQC,KAAI,SAACC,EAAMC,GAAP,OAC9C,yBAAK4H,IAAK7H,EAAK4G,WAAW9F,OAAO,EAAE,GAAKb,EAAI2G,YAC1C,kBAACM,GAAD,CAAYxB,GAAI1F,EAAKE,OAAOwE,OAAQ/G,KAAK,UAAUsF,MAAOjD,EAAKE,OAAOwE,OAAQI,SAAU,EAAKsC,wBAC3FQ,EAAU1C,QAAO,SAAC4C,EAAUC,GAC1B,OAAQD,EAASvB,UAAY/H,GAAOsJ,EAAS5H,OAAOwE,SAAW1E,EAAKE,OAAOwE,UAC1EhE,OAAS,EACZ,kBAACsG,GAAD,KAAahH,EAAKE,OAAOwE,OAAS,WAAa1E,EAAKK,MAAQ,iBAI5D,kBAAC,GAAD,KAAQL,EAAKE,OAAOwE,OAAS,WAAa1E,EAAKK,MAAQ,UAI7DkE,EAAa1D,KACX,yBAAKgH,IAAK,eACR,kBAACX,GAAD,CAAYxB,GAAI,cAAe/H,KAAK,UAAUsF,MAAO,2BAA4B6B,SAAU,EAAKsC,wBAChG,kBAACL,GAAD,KAAa,8BAGjB,EAAK1K,SAAS,CACV+D,SAAUT,EAAKE,KAAKA,KAAKO,SACzB4H,YAAazD,EACbzE,QAASH,EAAKE,KAAKA,KAAKC,aAG7BmB,OAAM,SAAAC,GACLtE,QAAQC,IAAIqE,MAvDI,SA0Db5E,GAAiB,EAAK2L,eAAe7C,UACxC,EAAK6C,eAAe7C,QAAQC,MAAMhE,QAAU,QAE1BuG,EAAU1C,QAAO,SAAChC,EAAKjD,GACzC,OAAOiD,EAAIqD,UAAY/H,KAETkC,OAAS,GAAK,EAAKyE,gBAAgBC,UACjD,EAAKD,gBAAgBC,QAAQC,MAAMhE,QAAU,QAjE7B,4CAxFhB,EAAK3E,MAAQ,CACT8B,IAAK,EAAKxC,MAAMsJ,MAAMC,OAAO/G,IAC7BlC,cAAe,EAAKN,MAAMsI,SAAS5H,MAAMJ,cACzCC,UAAW,EAAKP,MAAMsI,SAAS5H,MAAMH,UACrCI,GAAI,EAAKX,MAAMsI,SAAS5H,MAAMC,GAC9BH,KAAM,EAAKR,MAAMsI,SAAS5H,MAAMF,KAChC4D,SAAU,GACVN,QAAS,GACTuH,KAAM,GACNG,YAAa,GACbI,UAAW,IAEf,EAAKzC,gBAAkBK,IAAMC,YAC7B,EAAKwC,eAAiBzC,IAAMC,YAC5B,EAAK6B,cAAgB9B,IAAMC,YAhBZ,E,wDA+JPyC,GACVhM,OAAOC,KAAK+L,EAAK,Y,+BAET,IAAD,OACLtL,QAAQC,IAAI,UAAWC,KAAKJ,OADvB,MAEkCI,KAAKJ,MAApC0D,EAFH,EAEGA,SAAU4H,EAFb,EAEaA,YAAaxJ,EAF1B,EAE0BA,IACzB0J,EAAM,2EAEApL,KAAKd,MAAMsJ,MAAMC,OAAO/G,IACxB,SACA4B,EACA,kBAGZ,OACI,kBAAC,GAAD,KACE,kBAAC0G,GAAD,KACE,kBAAC,GAAD,qBACA,kBAAC,GAAD,KAAQ1G,GACP4H,EACD,kBAAC,GAAD,CACInD,KAAK,OACLa,GAAG,aACHzC,MAAOnG,KAAKJ,MAAM8K,YAClBzC,YAAY,0BACZD,SAAUhI,KAAKyK,6BACf5B,IAAK7I,KAAKwK,gBAEd,kBAAC,GAAD,CAAQpK,QAASJ,KAAK2K,eAAgB/B,GAAG,eAAeC,IAAK7I,KAAKqI,iBAAlE,QACA,kBAAC,GAAD,CAAcjK,KAAM,YAApB,UACA,kBAAC+L,GAAD,CAAa/J,QAAS,kBAAM,EAAKiL,YAAYD,IAAMxC,GAAG,cAAcC,IAAK7I,KAAKmL,gBAA9E,qBAEF,kBAACpB,GAAD,KACE,kBAAC,EAAD,CAAOrI,IAAKA,U,GAjMD/C,aCwFZ2M,I,yDApIb,WAAYpM,GAAQ,IAAD,8BACjB,cAAMA,IASRyD,kBAVmB,sBAUC,sBAAA3E,EAAA,6DAClB,EAAKuB,SAAS,CACZwF,WAAW,IAFK,SAIZC,MAAM,0BAA2B,CACrCC,OAAQ,MACRC,YAAa,UACbC,QAAS,CACPC,OACA,mBACA,eAAgB,mBAChB,oCAAoC,KAGrCxC,MAAK,SAAAyC,GACJ,GAAwB,MAApBA,EAASC,OAAgB,OAAOD,EAASE,OAC7C,MAAM,IAAIC,MAAM,kCAEjB5C,MAAK,SAAA6C,IAEyB,IAAzBA,EAAaC,QACf,EAAKnG,SAAS,CACZC,eAAe,EACfC,UAAWgG,EAAa/F,KAAKD,UAC7BI,GAAI4F,EAAa5F,GACjBH,KAAM+F,EAAa/F,OAGrB,EAAKH,SAAS,CACZC,eAAe,EACfC,UAAW,GACXI,GAAI4F,EAAa5F,GACjBH,KAAM,QAIXyE,OAAM,SAAAC,GACLtE,QAAQC,IAAIqE,MArCE,OAwChB,EAAKuB,YAEL,EAAKpG,SAAS,CACZwF,WAAW,IA3CG,2CAVD,EAwDnBY,UAxDmB,sBAwDP,gCAAA3H,EAAA,2DACK,EAAK4B,OAAS,KAArBC,EADE,EACFA,IADE,iCAGkBkB,EAAIuB,YAAYzC,GAAIsE,OAAM,SAAA0B,GAAG,OAAI/F,QAAQC,IAAI8F,MAH/D,yCAMAxE,EAAU,CACdxB,GAAIA,EACJ0D,MAAO,IARH,SAUgBxC,EAAIgB,WAAWV,GAAS8C,OAAM,SAAA0B,GAAG,OAAI/F,QAAQC,IAAI8F,MAVjE,kGAtDV,EAAKjG,MAAQ,CACXJ,eAAe,EACfC,UAAW,GACXI,GAAI,GACJH,KAAM,GACNqF,WAAW,GAPI,E,qDAgFjBjF,QAAQC,IAAI,MAAOC,KAAKJ,OADjB,MAEoDI,KAAKJ,MAAxDJ,EAFD,EAECA,cAAeC,EAFhB,EAEgBA,UAAWI,EAF3B,EAE2BA,GAAIH,EAF/B,EAE+BA,KAAMqF,EAFrC,EAEqCA,UAC5C,OACE,kBAAC,IAAD,KAEEA,EAsCG,8BArCFvF,EAEE,oCACC,kBAAC,EAAD,CACEA,cAAeA,EACfC,UAAWA,EACXI,GAAIA,EACJH,KAAMA,IAER,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6L,KAAK,SAASC,OAAK,EAACC,UAAW3G,IACtC,kBAAC,IAAD,CAAOyG,KAAK,eAAeC,OAAK,EAACC,UAAWtE,KAC5C,kBAAC,IAAD,CAAOoE,KAAK,oBAAoBC,OAAK,EAACC,UAAWvD,KACjD,kBAAC,IAAD,CAAOqD,KAAK,qBAAqBC,OAAK,EAACC,UAAWpB,KAClD,kBAAC,IAAD,CAAOkB,KAAK,WAAWC,OAAK,EAACC,UAAW7B,KACxC,kBAAC,IAAD,CAAU8B,KAAK,IAAIxL,GAAG,aAMzB,oCACC,kBAAC,EAAD,CACEV,cAAeA,EACfC,UAAWA,EACXI,GAAIA,EACJH,KAAMA,IAER,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6L,KAAK,SAASC,OAAK,EAACC,UAAW3G,IACtC,kBAAC,IAAD,CAAOyG,KAAK,qBAAqBC,OAAK,EAACC,UAAWpB,KAClD,kBAAC,IAAD,CAAUqB,KAAK,IAAIxL,GAAG,kB,GAtHlBvB,cCLlBgN,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,U,mBCJjDC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.25147205.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\nimport logo from '../logo.svg'\r\nconst Wrapper = styled.a.attrs({ className: 'navbar-brand' })``\r\nclass Logo extends Component {\r\n  render() {\r\n    return (\r\n      <Wrapper href=\"https://reactjs.org/\" target=\"_blank\">\r\n        <img src={logo} width=\"50\" height=\"50\" alt=\"Build a voting App - FreeCodeCamp\" />\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\nexport default Logo\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nconst Collapse = styled.div.attrs({ className: \"collapse navbar-collapse\" })``\r\nconst List = styled.div.attrs({ className: \"navbar-nav mr-auto\" })``\r\nconst Item = styled.div.attrs({ className: \"collapse navbar-collapse\" })``\r\nconst Log = styled.div.attrs({ className: \"navbar-brand\" })`\r\n  cursor: pointer;\r\n`\r\n\r\nclass Links extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      authenticated: this.props.authenticated || '',\r\n      twitterId: this.props.twitterId || '',\r\n      ip: this.props.ip || '',\r\n      user: this.props.user || '',\r\n      //isLoading: false,\r\n    }\r\n  }\r\n  _handleLogoutClick = () => {\r\n    window.open(\"http://localhost:8000/api/auth/logout\", \"_self\") // express\r\n    this.props.handleNotAuthenticated()\r\n    this.setState({ authenticated: false, twitterId: '', user: '', })\r\n  }\r\n  _handleLoginClick = () => {\r\n    window.open(\"http://localhost:8000/api/auth/twitter\", \"_self\")\r\n  }\r\n  render() {\r\n    console.log('links', this.state)\r\n    const { authenticated, twitterId, ip, user, } = this.state\r\n    return (\r\n      <React.Fragment>\r\n        <Link to={{ pathname: \"/polls\",\r\n                    state: {\r\n                      authenticated: authenticated,\r\n                      twitterId: twitterId,\r\n                      ip: ip,\r\n                      user: user,\r\n                    }\r\n                  }}\r\n          className=\"navbar-brand\"\r\n        >\r\n          Build a voting App\r\n        </Link>\r\n        <Collapse>\r\n          <List>\r\n\r\n            <Item>\r\n              <Link to={{ pathname: \"/polls\",\r\n                          state: {\r\n                            authenticated: authenticated,\r\n                            twitterId: twitterId,\r\n                            ip: ip,\r\n                            user: user,\r\n                          }\r\n                        }}\r\n                className=\"nav-link\"\r\n              >\r\n                Polls\r\n              </Link>\r\n            </Item>\r\n\r\n            <Item>\r\n              {\r\n                authenticated ? (\r\n                  <Link to={{ pathname: \"/mypolls\",\r\n                              state: {\r\n                                authenticated: authenticated,\r\n                                twitterId: twitterId,\r\n                                ip: ip,\r\n                                user: user,\r\n                              }\r\n                            }}\r\n                    className=\"nav-link\"\r\n                  >\r\n                    My Polls\r\n                  </Link>\r\n                ) : (\r\n                  <div></div>\r\n                )\r\n              }\r\n            </Item>\r\n\r\n            <Item>\r\n            {\r\n              authenticated ? (\r\n                <Link to={{ pathname: \"/poll/insert\",\r\n                            state: {\r\n                              authenticated: authenticated,\r\n                              twitterId: twitterId,\r\n                              ip: ip,\r\n                              user: user,\r\n                            }\r\n                          }}\r\n                  className=\"nav-link\"\r\n                >\r\n                  Create Poll\r\n                </Link>\r\n              ) : (\r\n                <div></div>\r\n              )\r\n            }\r\n            </Item>\r\n\r\n          </List>\r\n          {\r\n            authenticated ? (\r\n              <Log onClick={this._handleLogoutClick}>\r\n                Logout Twitter\r\n              </Log>\r\n            ) : (\r\n              <Log onClick={this._handleLoginClick}>\r\n                Login Twitter\r\n              </Log>\r\n            )\r\n          }\r\n        </Collapse>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Links\r\n","import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Logo from './Logo'\r\nimport Links from './Links'\r\n\r\nconst Container = styled.div.attrs({ className: \"container\" })``\r\nconst Nav = styled.nav.attrs({ className: \"navbar navbar-expand-lg navbar-dark bg-dark\" })`\r\n  margin-bottom: 20px;\r\n`\r\nconst Name = styled.div`\r\n  color: #fff;\r\n  background: #444;\r\n  padding: 5px;\r\n`\r\nconst Pic = styled.img`\r\n  width: 30px;\r\n`\r\n\r\nclass NavBar extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      authenticated: this.props.authenticated || '',\r\n      twitterId: this.props.twitterId || '',\r\n      ip: this.props.ip || '',\r\n      user: this.props.user || '',\r\n      //isLoading: false,\r\n    }\r\n  }\r\n  _handleNotAuthenticated = () => {\r\n    this.setState({ authenticated: false, twitterId: '', user: '', })\r\n  }\r\n  render() {\r\n    console.log('navbar', this.state)\r\n    const { authenticated, twitterId, ip, user,  } = this.state\r\n    const name = user.name || ''\r\n    const profileImageUrl = user.profileImageUrl || ''\r\n    return (\r\n      <Container>\r\n        <Nav>\r\n          <Logo />\r\n          <Links\r\n            authenticated={authenticated}\r\n            twitterId={twitterId}\r\n            ip={ip}\r\n            user={user}\r\n            handleNotAuthenticated={this._handleNotAuthenticated}\r\n          />\r\n          { name ?\r\n            (\r\n              <Name>{name}</Name>\r\n            ) : (\r\n              <div></div>\r\n            )\r\n          }\r\n          { profileImageUrl ?\r\n            (\r\n              <Pic src={profileImageUrl}></Pic>\r\n            ) : (\r\n              <div></div>\r\n            )\r\n          }\r\n          { ip ?\r\n            (\r\n              <Name>{ip}</Name>\r\n            ) : (\r\n              <div></div>\r\n            )\r\n          }\r\n        </Nav>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NavBar\r\n","import axios from 'axios'\r\n\r\nconst api = axios.create({\r\n  baseURL: '/api' // express\r\n})\r\n\r\nexport const insertPoll = payload => api.post(`/poll`, payload)\r\nexport const getAllPolls = () => api.get(`/polls`)\r\nexport const updatePollById = (_id, payload) => api.put(`/poll/${_id}`, payload)\r\nexport const deletePollById = _id => api.delete(`/poll/${_id}`)\r\nexport const getPollById = _id => api.get(`/poll/${_id}`)\r\n\r\nexport const insertUser = payload => api.post(`/user`, payload)\r\nexport const getAllUsers = () => api.get(`/users`)\r\nexport const updateUserById = (_id, payload) => api.put(`/user/id/${_id}`, payload)\r\nexport const updateUserByIp = (ip, payload) => api.put(`/user/ip/${ip}`, payload)\r\nexport const deleteUserById = _id => api.delete(`/user/id/${_id}`)\r\nexport const deleteUserByIp = ip => api.delete(`/user/ip/${ip}`)\r\nexport const getUserById = _id => api.get(`/user/id/${_id}`)\r\nexport const getUserByIp = ip => api.get(`/user/ip/${ip}`)\r\n\r\nexport const getAllUsersTwitter = () => api.get(`/userstwitter`)\r\nexport const updateUserByTwitterId = (twitterId, payload) => api.put(`/usertwitter/id/${twitterId}`, payload)\r\nexport const getUserByTwitterId = twitterId => api.get(`/usertwitter/id/${twitterId}`)\r\n\r\nconst apis = {\r\n    insertPoll,\r\n    getAllPolls,\r\n    updatePollById,\r\n    deletePollById,\r\n    getPollById,\r\n\r\n    insertUser,\r\n    getAllUsers,\r\n    updateUserById,\r\n    updateUserByIp,\r\n    deleteUserById,\r\n    deleteUserByIp,\r\n    getUserById,\r\n    getUserByIp,\r\n\r\n    getAllUsersTwitter,\r\n    updateUserByTwitterId,\r\n    getUserByTwitterId,\r\n}\r\n\r\nexport default apis\r\n","import React, { Component } from 'react'\r\nimport { Doughnut } from 'react-chartjs-2'\r\nimport api from '../api'\r\n\r\nclass Chart extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      _id: this.props._id,\r\n      dataChart: {},\r\n      question: '',\r\n    }\r\n    this.colors18 = ['#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462','#b3de69','#fccde5','#d9d9d9',\r\n      '#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6']\r\n  }\r\n  componentDidMount = async () => {\r\n    const { _id } = this.state\r\n    await api.getPollById(_id).then(poll => {\r\n      const labels = poll.data.data.answers.map((item, ind) => item.answer)\r\n      const label = poll.data.data.question\r\n      const data = poll.data.data.answers.map((item, ind) => item.votes)\r\n      var backgroundColor = []\r\n      var hoverBackgroundColor = []\r\n      var t = this.colors18.length\r\n      var c = 0\r\n      for (let i = 0; i < poll.data.data.answers.length; i++) {\r\n        backgroundColor.push(this.colors18[i])\r\n        hoverBackgroundColor.push(this.colors18[i].substr(0,2) + this.colors18[i].substr(3,1) + this.colors18[i].substr(5,1))\r\n        c++\r\n        if (c === t) {\r\n          c = 0\r\n        }\r\n      }\r\n\r\n      const dataChart = {\r\n        labels: [...labels],\r\n        datasets: [\r\n          {\r\n            label: label,\r\n            backgroundColor: backgroundColor,\r\n            hoverBackgroundColor: hoverBackgroundColor,\r\n            data: [...data],\r\n          },\r\n        ],\r\n      }\r\n      this.setState({\r\n        dataChart: dataChart,\r\n        question: label,\r\n      })\r\n    })\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n  render() {\r\n    const { dataChart, question } = this.state\r\n    return (\r\n      <div>\r\n         <Doughnut\r\n           data={dataChart}\r\n           options={{\r\n             title:{\r\n               display:false,\r\n               text:'Chart of Poll: ' + question,\r\n               fontSize:20\r\n             },\r\n             legend:{\r\n               display:true,\r\n               position:'right'\r\n             }\r\n           }}\r\n         />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Chart\r\n","import React, { Component } from 'react'\r\nimport ReactTable from 'react-table-6'\r\nimport { Link } from 'react-router-dom'\r\nimport api from '../api'\r\nimport styled from 'styled-components'\r\nimport 'react-table-6/react-table.css'\r\n\r\nconst Wrapper = styled.div` padding: 0 40px 40px 40px; `\r\nconst Title = styled.h1.attrs({ className: 'h1', })``\r\n\r\nclass PollsList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            polls: [],\r\n            columns: [],\r\n            isLoading: false,\r\n            authenticated: '',\r\n            twitterId: '',\r\n            ip: '',\r\n            user: '',\r\n        }\r\n    }\r\n    componentDidMount = async () => {\r\n        this.setState({ isLoading: true })\r\n\r\n        await fetch(\"/api/auth/login/success\", {\r\n          method: \"GET\",\r\n          credentials: \"include\",\r\n          headers: {\r\n            Accept:\r\n            \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Credentials\": true\r\n          }\r\n        })\r\n          .then(response => {\r\n            if (response.status === 200) return response.json()\r\n            throw new Error(\"failed to authenticate user\")\r\n          })\r\n          .then(responseJson => {\r\n\r\n            if (responseJson.success === true) {\r\n              this.setState({\r\n                authenticated: true,\r\n                twitterId: responseJson.user.twitterId,\r\n                ip: responseJson.ip,\r\n                user: responseJson.user,\r\n              })\r\n            } else {\r\n              this.setState({\r\n                authenticated: false,\r\n                twitterId: '',\r\n                ip: responseJson.ip,\r\n                user: '',\r\n              })\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.log(error)\r\n          })\r\n\r\n        this.addUserIp()\r\n\r\n        await api.getAllPolls().then(polls => {\r\n            this.setState({\r\n                polls: polls.data.data,\r\n                isLoading: false,\r\n            })\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n\r\n    }\r\n    addUserIp = async () => {\r\n      const { ip } = this.state\r\n      if (ip) {\r\n        const currentUser = await api.getUserByIp(ip).catch(err => console.log(err))\r\n        if (!currentUser) {\r\n          //console.log('New User')\r\n          const payload = {\r\n            ip: ip,\r\n            votes: [],\r\n          }\r\n          const newUser = await api.insertUser(payload).catch(err => console.log(err))\r\n          if (newUser) {\r\n            //console.log('New User created')\r\n            //done(null, newUser)\r\n          } else {\r\n            //console.log(\"New User don't created\")\r\n          }\r\n        } else {\r\n          //console.log('User exists')\r\n        }\r\n      } else {\r\n        //console.log('IP empty')\r\n      }\r\n    }\r\n    render() {\r\n      console.log('polls', this.state)\r\n        const { polls, isLoading } = this.state\r\n        const columns = [\r\n            {\r\n                Header: 'ID',\r\n                accessor: '_id',\r\n                filterable: true,\r\n            },\r\n            {\r\n                Header: 'Question',\r\n                accessor: 'question',\r\n                filterable: true,\r\n            },\r\n            {\r\n                Header: 'Answers',\r\n                accessor: 'answers',\r\n                Cell: function(props) {\r\n                  return (\r\n                      <span>\r\n                        {props.value.length > 1 ? (props.value.map((ele, ind) => ele.answer).join(' / ')) : (props.value.map((ele, ind) => ele.answer))}\r\n                      </span>\r\n                  )\r\n                }\r\n            },\r\n            {\r\n                Header: '',\r\n                accessor: '',\r\n                Cell: function(props) {\r\n                    return (\r\n                      <span>\r\n                        <React.Fragment>\r\n                          <Link to={{ pathname: `/poll/details/${props.original._id}`,\r\n                                  state: {\r\n                                    authenticated: this.state.authenticated,\r\n                                    twitterId: this.state.twitterId,\r\n                                    ip: this.state.ip,\r\n                                    user: this.state.user,\r\n                                  }\r\n                                }}\r\n                                className=\"nav-link\" >Details</Link>\r\n                        </React.Fragment>\r\n                      </span>\r\n                    )\r\n                }.bind(this),\r\n            },\r\n        ]\r\n\r\n        let showTable = true\r\n        if (!polls.length) {\r\n            showTable = false\r\n        }\r\n\r\n        return (\r\n            <Wrapper>\r\n                <Title>Polls</Title>\r\n                {showTable && !isLoading && (\r\n                    <ReactTable\r\n                        data={polls}\r\n                        columns={columns}\r\n                        loading={isLoading}\r\n                        defaultPageSize={10}\r\n                        showPageSizeOptions={true}\r\n                        minRows={0}\r\n                    />\r\n                )}\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PollsList\r\n","import React, { Component } from 'react'\r\nimport api from '../api'\r\nimport styled from 'styled-components'\r\n\r\nconst Title = styled.h1.attrs({ className: 'h1', })``\r\nconst Wrapper = styled.div.attrs({ className: 'form-group', })`\r\n    margin: 0 30px;\r\n`\r\nconst Label = styled.label` margin: 5px; `\r\nconst InputText = styled.input.attrs({ className: 'form-control', })`\r\n    margin: 5px;\r\n`\r\nconst Button = styled.button.attrs({ className: `btn btn-primary`, })`\r\n    margin: 15px 15px 15px 5px;\r\n`\r\nconst CancelButton = styled.a.attrs({ className: `btn btn-danger`, })`\r\n    margin: 15px 15px 15px 5px;\r\n`\r\n\r\nclass PollsInsert extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            question: '',\r\n            answers: '',\r\n        }\r\n    }\r\n    handleChangeInputQuestion = event => {\r\n        const question = event.target.value\r\n        this.setState({ question })\r\n    }\r\n    handleChangeInputAnswers = event => {\r\n        const answers = event.target.value\r\n        this.setState({ answers })\r\n    }\r\n    handleIncludePoll = async () => {\r\n        const { question, answers, } = this.state\r\n        const { twitterId, ip, } = this.props.location.state\r\n        const arrayAnswers = answers.split('/')\r\n\r\n        var arrTemp = []\r\n        arrayAnswers.map((ele, ind) => {\r\n          return (arrTemp.push({ answer: ele.trim(), votes: 0, }))\r\n        })\r\n\r\n        const payload = { question: question, answers: arrTemp, ip: ip, twitterId: twitterId }\r\n\r\n        await api.insertPoll(payload).then(res => {\r\n            window.alert(`Poll inserted successfully`)\r\n            this.setState({\r\n              question: '',\r\n              answers: '',\r\n            })\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n\r\n        window.location.href = '/mypolls'\r\n    }\r\n    render() {\r\n      console.log('insert', this.state)\r\n        const { question, answers } = this.state\r\n        return (\r\n            <Wrapper>\r\n                <Title>Create Poll</Title>\r\n\r\n                <Label>Question: </Label>\r\n                <InputText\r\n                    type=\"text\"\r\n                    value={question}\r\n                    onChange={this.handleChangeInputQuestion}\r\n                />\r\n\r\n                <Label>Answers: </Label>\r\n                <InputText\r\n                    type=\"text\"\r\n                    value={answers}\r\n                    placeholder=\"Separate each one with '/'...\"\r\n                    onChange={this.handleChangeInputAnswers}\r\n                />\r\n\r\n                <Button onClick={this.handleIncludePoll}>Add Poll</Button>\r\n                <CancelButton href={'/mypolls'}>Cancel</CancelButton>\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PollsInsert\r\n","import React, { Component } from 'react'\r\nimport api from '../api'\r\nimport styled from 'styled-components'\r\n\r\nconst Title = styled.h1.attrs({ className: 'h1', })``\r\nconst Wrapper = styled.div.attrs({ className: 'form-group', })`\r\n    margin: 0 30px;\r\n`\r\nconst Label = styled.label`\r\n    margin: 5px;\r\n`\r\nconst InputText = styled.input.attrs({ className: 'form-control', })`\r\n    margin: 5px;\r\n`\r\nconst Button = styled.button.attrs({ className: `btn btn-primary`, })`\r\n    margin: 15px 15px 15px 5px;\r\n    display: initial;\r\n`\r\nconst CancelButton = styled.a.attrs({ className: `btn btn-danger`, })`\r\n    margin: 15px 15px 15px 5px;\r\n`\r\n\r\nclass PollsUpdate extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            _id: this.props.match.params._id,\r\n            question: '',\r\n            answers: '',\r\n            votes: [],\r\n        }\r\n        this.updateButtonRef = React.createRef()\r\n    }\r\n    handleChangeInputQuestion = event => {\r\n        const question = event.target.value\r\n        this.setState({ question })\r\n    }\r\n    handleChangeInputAnswers = event => {\r\n        const answers = event.target.value\r\n        this.setState({ answers })\r\n    }\r\n    handleUpdatePoll = async () => {\r\n      const { _id, question, answers, } = this.state\r\n      const arrayAnswers = answers.split('/')\r\n      var arrTemp = []\r\n      arrayAnswers.map((ele, ind) => {\r\n        return (arrTemp.push({ answer: ele.trim(), votes: 0, }))\r\n      })\r\n      const payload = { question, answers: arrTemp, }\r\n\r\n      await api.updatePollById(_id, payload).then(res => {\r\n        window.alert(`Poll updated successfully`)\r\n        this.setState({\r\n          question: '',\r\n          answers: [],\r\n          votes: [],\r\n        })\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n\r\n      window.location.href = '/mypolls'\r\n    }\r\n    componentDidMount = async () => {\r\n      var { _id, votes } = this.state\r\n      await api.getPollById(_id).then(poll => {\r\n        votes = poll.data.data.answers.map((ele, ind) => ele.votes)\r\n        this.setState({\r\n          question: poll.data.data.question,\r\n          answers: poll.data.data.answers.map((ele, ind) => ele.answer.trim()).join(' / '),\r\n          votes: poll.data.data.answers.map((ele, ind) => ele.votes),\r\n        })\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n\r\n      const votesExists = votes.filter((ele, ind) => {\r\n        return ele > 0\r\n      })\r\n      if (votesExists.length > 0 && this.updateButtonRef.current) {\r\n        this.updateButtonRef.current.style.display = \"none\"\r\n      }\r\n\r\n    }\r\n    render() {\r\n        console.log('update', this.state)\r\n        const { question, answers, } = this.state\r\n\r\n        return (\r\n            <Wrapper>\r\n                <Title>Update Poll</Title>\r\n\r\n                <Label>Question: </Label>\r\n                <InputText\r\n                    type=\"text\"\r\n                    value={question}\r\n                    onChange={this.handleChangeInputQuestion}\r\n                />\r\n\r\n                <Label>Answers: </Label>\r\n                <InputText\r\n                    type=\"text\"\r\n                    value={answers}\r\n                    placeholder=\"Separate each one with '/'...\"\r\n                    onChange={this.handleChangeInputAnswers}\r\n                />\r\n\r\n                <Button id=\"updateButton\" onClick={this.handleUpdatePoll} ref={this.updateButtonRef}>Update Poll</Button>\r\n                <CancelButton href={'/mypolls'}>Cancel</CancelButton>\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PollsUpdate\r\n","import React, { Component } from 'react'\r\nimport ReactTable from 'react-table-6'\r\nimport { Link } from 'react-router-dom'\r\nimport api from '../api'\r\nimport styled from 'styled-components'\r\nimport 'react-table-6/react-table.css'\r\n\r\nconst Wrapper = styled.div` padding: 0 40px 40px 40px; `\r\nconst Title = styled.h1.attrs({ className: 'h1', })``\r\nconst Delete = styled.div` color: #ff0000; cursor: pointer; `\r\n\r\nclass DeletePoll extends Component {\r\n  deleteUser = async event => {\r\n    event.preventDefault()\r\n    const {twitterId, ip, _id, } = this.props\r\n    if (window.confirm(`Do tou want to delete the poll ${_id} permanently?`,)) {\r\n\r\n      await api.deletePollById(_id)\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n\r\n      await api.getAllUsersTwitter().then(usersTwitter => {\r\n        usersTwitter.data.data.forEach((item, ind) => {\r\n          var upd = false\r\n          var vot = item.votes.map((itemVotes, indVotes) => {\r\n            if (itemVotes.poll_id === _id) {\r\n              upd = true\r\n              return ({ poll_id: '', answer: '' })\r\n            } else {\r\n              return ({ poll_id: itemVotes.poll_id, answer: itemVotes.answer })\r\n            }\r\n          })\r\n          if (upd) {\r\n            var payload = { votes: vot }\r\n            api.updateUserByTwitterId(twitterId, payload)\r\n            .catch(error => {\r\n              console.log(error)\r\n            })\r\n          }\r\n        })\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n\r\n      await api.getAllUsers().then(users => {\r\n        users.data.data.forEach((item, ind) => {\r\n          var upd = false\r\n          var vot = item.votes.map((itemVotes, indVotes) => {\r\n            if (itemVotes.poll_id === _id) {\r\n              upd = true\r\n              return ({ poll_id: '', answer: '' })\r\n            } else {\r\n              return ({ poll_id: itemVotes.poll_id, answer: itemVotes.answer })\r\n            }\r\n          })\r\n          if (upd) {\r\n            var payload = { votes: vot }\r\n            api.updateUserByIp(ip, payload)\r\n            .catch(error => {\r\n              console.log(error)\r\n            })\r\n          }\r\n        })\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n\r\n      window.location.reload()\r\n    }\r\n  }\r\n  render() {\r\n    return <Delete onClick={this.deleteUser}>Delete</Delete>\r\n  }\r\n}\r\n\r\nclass MyPollsList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            polls: [],\r\n            columns: [],\r\n            isLoading: false,\r\n        }\r\n    }\r\n    componentDidMount = async () => {\r\n      this.setState({ isLoading: true })\r\n\r\n      const { twitterId } = this.props.location.state\r\n      await api.getAllPolls().then(polls => {\r\n        let p = polls.data.data\r\n        if (twitterId) {\r\n          p = p.filter(function(item) {\r\n            return item.twitterId === twitterId.toString()\r\n          })\r\n        } else {\r\n          p = []\r\n        }\r\n        this.setState({\r\n            polls: p,\r\n            isLoading: false,\r\n        })\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n\r\n    }\r\n    render() {\r\n      console.log('my polls', this.state)\r\n        const { polls, isLoading } = this.state\r\n        const columns = [\r\n            {\r\n                Header: 'ID',\r\n                accessor: '_id',\r\n                filterable: true,\r\n            },\r\n            {\r\n                Header: 'Question',\r\n                accessor: 'question',\r\n                filterable: true,\r\n            },\r\n            {\r\n                Header: 'Answers',\r\n                accessor: 'answers',\r\n                Cell: function(props) {\r\n                  return (\r\n                      <span>\r\n                        {props.value.length > 1\r\n                          ?\r\n                          (props.value.map((ele, ind) => ele.answer).join(' / '))\r\n                          :\r\n                          (props.value.map((ele, ind) => ele.answer))}\r\n                      </span>\r\n                  )\r\n                }\r\n            },\r\n            {\r\n                Header: '',\r\n                accessor: '',\r\n                Cell: function(props) {\r\n                    return (\r\n                        <span>\r\n                            <DeletePoll\r\n                              _id={props.original._id}\r\n                              authenticated={this.props.location.state.authenticated}\r\n                              twitterId={this.props.location.state.twitterId}\r\n                              ip={this.props.location.state.ip}\r\n                              user={this.props.location.state.user} />\r\n                        </span>\r\n                    )\r\n                }.bind(this),\r\n            },\r\n            {\r\n                Header: '',\r\n                accessor: '',\r\n                Cell: function(props) {\r\n                    return (\r\n                        <span>\r\n                          <React.Fragment>\r\n                            <Link to={{ pathname: `/poll/update/${props.original._id}`,\r\n                                    state: {\r\n                                      authenticated: this.props.location.state.authenticated,\r\n                                      twitterId: this.props.location.state.twitterId,\r\n                                      ip: this.props.location.state.ip,\r\n                                      user: this.props.location.state.user,\r\n                                    }\r\n                                  }}\r\n                                  className=\"nav-link\" >Update</Link>\r\n                          </React.Fragment>\r\n                        </span>\r\n                    )\r\n                }.bind(this),\r\n            },\r\n            {\r\n                Header: '',\r\n                accessor: '',\r\n                Cell: function(props) {\r\n                    return (\r\n                        <span>\r\n                          <React.Fragment>\r\n                            <Link to={{ pathname: `/poll/details/${props.original._id}`,\r\n                                    state: {\r\n                                      authenticated: this.props.location.state.authenticated,\r\n                                      twitterId: this.props.location.state.twitterId,\r\n                                      ip: this.props.location.state.ip,\r\n                                      user: this.props.location.state.user,\r\n                                    }\r\n                                  }}\r\n                                  className=\"nav-link\" >Details</Link>\r\n                          </React.Fragment>\r\n                        </span>\r\n                    )\r\n                }.bind(this),\r\n            },\r\n        ]\r\n\r\n        let showTable = true\r\n        if (!polls.length) {\r\n            showTable = false\r\n        }\r\n\r\n        return (\r\n            <Wrapper>\r\n                <Title>My Polls</Title>\r\n                {showTable && !isLoading && (\r\n                    <ReactTable\r\n                        data={polls}\r\n                        columns={columns}\r\n                        loading={isLoading}\r\n                        defaultPageSize={10}\r\n                        showPageSizeOptions={true}\r\n                        minRows={0}\r\n                    />\r\n                )}\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyPollsList\r\n","import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\nimport api from '../api'\r\nimport { Chart } from '../components'\r\n\r\nconst Title = styled.h1.attrs({ className: 'h1', })``\r\nconst Wrapper = styled.div.attrs({ className: 'form-group', })`\r\n    margin: 0 30px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\nconst WrapperRigth = styled.div.attrs({ className: 'form-group', })`\r\n    margin: 0 30px;\r\n    float: rigth;\r\n    width: 40%;\r\n`\r\nconst WrapperLeft = styled.div.attrs({ className: 'form-group', })`\r\n    margin: 0 30px;\r\n    float: left;\r\n    width: 40%;\r\n`\r\nconst Label = styled.label`\r\n    margin: 5px;\r\n`\r\nconst LabelExtra = styled.label`\r\n    margin: 5px;\r\n    color: DodgerBlue;\r\n`\r\nconst LabelVoted = styled.label`\r\n    margin: 5px;\r\n    color: green;\r\n    font-weight: bold;\r\n`\r\nconst ShareButton = styled.button.attrs({ className: 'btn btn-info', })`\r\n    margin: 15px 15px 15px 5px;\r\n    display: initial;\r\n`\r\nconst Button = styled.button.attrs({ className: 'btn btn-primary', })`\r\n    margin: 15px 15px 15px 5px;\r\n    display: initial;\r\n`\r\nconst CancelButton = styled.a.attrs({ className: 'btn btn-danger', })`\r\n    margin: 15px 15px 15px 5px;\r\n`\r\nconst InputText = styled.input.attrs({ className: 'form-control', })`\r\n    margin: 5px;\r\n    display: none;\r\n`\r\nconst InputRadio = styled.input.attrs({ type: 'radio', })`\r\n    margin: 5px;\r\n`\r\n\r\nclass PollsDetails extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            _id: this.props.match.params._id,\r\n            authenticated: this.props.location.state.authenticated,\r\n            twitterId: this.props.location.state.twitterId,\r\n            ip: this.props.location.state.ip,\r\n            user: this.props.location.state.user,\r\n            question: '',\r\n            answers: '',\r\n            vote: '',\r\n            extraOption: '',\r\n            userVotes: [],\r\n        }\r\n        this.updateButtonRef = React.createRef()\r\n        this.shareButtonRef = React.createRef()\r\n        this.extraInputRef = React.createRef()\r\n    }\r\n    handleChangeInputVote = async event => {\r\n        const vote = event.target.value\r\n        this.setState({ vote })\r\n        if (event.target.id === 'extraOption') {\r\n          this.extraInputRef.current.style.display = 'initial'\r\n        } else {\r\n          this.extraInputRef.current.style.display = 'none'\r\n        }\r\n    }\r\n    handleChangeInputExtraOption = event => {\r\n        const extraOption = event.target.value\r\n        this.setState({ extraOption })\r\n    }\r\n    handleVotePoll = async () => {\r\n      const { _id, question, answers, extraOption, vote, authenticated, twitterId, ip, } = this.state\r\n      if (!vote) return\r\n      if (!extraOption && vote.trim() === \"I'd like a custom option\") return\r\n\r\n      var arrTemp = []\r\n      answers.map((ele, ind) => {\r\n        if (ele.answer.trim() === vote.trim()) {\r\n          return (arrTemp.push({ answer: ele.answer.trim(), votes: ele.votes + 1, }))\r\n        } else {\r\n          return (arrTemp.push({ answer: ele.answer.trim(), votes: ele.votes, }))\r\n        }\r\n      })\r\n      if (extraOption && vote.trim() === \"I'd like a custom option\") arrTemp.push({ answer: extraOption, votes: 1, })\r\n      const payload = { question, answers: arrTemp, }\r\n\r\n      await api.updatePollById(_id, payload).then(res => {\r\n        window.alert(`Poll voted successfully`)\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n      arrTemp = []\r\n      if (authenticated) {\r\n        // twitterId\r\n        await api.getUserByTwitterId(twitterId).then(user => {\r\n\r\n          arrTemp = user.data.data.votes || []\r\n          arrTemp.push({ poll_id: _id,\r\n            answer: ( vote.trim() === \"I'd like a custom option\" ? extraOption : vote.trim()) })\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n        const payload2 = { votes: arrTemp, }\r\n        await api.updateUserByTwitterId(twitterId, payload2)\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n      } else {\r\n        // ip\r\n        await api.getUserByIp(ip).then(user => {\r\n\r\n          arrTemp = user.data.data.votes || []\r\n          arrTemp.push({ poll_id: _id,\r\n            answer: ( vote.trim() === \"I'd like a custom option\" ? extraOption : vote.trim()) })\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n        const payload3 = { votes: arrTemp, }\r\n        await api.updateUserByIp(ip, payload3)\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n      }\r\n\r\n      window.location.href = '/mypolls'\r\n    }\r\n    componentDidMount = async () => {\r\n      var { _id, authenticated, twitterId, ip, userVotes, } = this.state\r\n\r\n      if (authenticated) {\r\n        // twitterId\r\n        await api.getUserByTwitterId(twitterId).then(user => {\r\n          userVotes = user.data.data.votes || []\r\n          this.setState({\r\n            userVotes: user.data.data.votes || []\r\n          })\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n      } else {\r\n        // ip\r\n        await api.getUserByIp(ip).then(user => {\r\n          userVotes = user.data.data.votes || []\r\n          this.setState({\r\n            userVotes: user.data.data.votes || []\r\n          })\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n      }\r\n\r\n      await api.getPollById(_id).then(poll => {\r\n        const arrayAnswers = poll.data.data.answers.map((item, ind) =>\r\n          <div key={item.toString().substr(0,5) + ind.toString()}>\r\n            <InputRadio id={item.answer.trim()} name=\"options\" value={item.answer.trim()} onChange={this.handleChangeInputVote} />\r\n            { userVotes.filter((itemUser, indUser) => {\r\n                return (itemUser.poll_id === _id && itemUser.answer.trim() === item.answer.trim())\r\n              }).length > 0 ? (\r\n              <LabelVoted>{item.answer.trim() + ' ..... (' + item.votes + '). Your VOTE.'}</LabelVoted>\r\n            )\r\n            :\r\n            (\r\n              <Label>{item.answer.trim() + ' ..... (' + item.votes + ').'}</Label>\r\n            )}\r\n          </div>\r\n        )\r\n        arrayAnswers.push(\r\n          <div key={'extraOption'}>\r\n            <InputRadio id={'extraOption'} name=\"options\" value={\"I'd like a custom option\"} onChange={this.handleChangeInputVote} />\r\n            <LabelExtra>{\"I'd like a custom option\"}</LabelExtra>\r\n          </div>\r\n        )\r\n        this.setState({\r\n            question: poll.data.data.question,\r\n            answersHtml: arrayAnswers,\r\n            answers: poll.data.data.answers,\r\n        })\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n\r\n      if (!authenticated && this.shareButtonRef.current) {\r\n        this.shareButtonRef.current.style.display = \"none\"\r\n      }\r\n      const votesExists = userVotes.filter((ele, ind) => {\r\n        return ele.poll_id === _id\r\n      })\r\n      if (votesExists.length > 0 && this.updateButtonRef.current) {\r\n        this.updateButtonRef.current.style.display = \"none\"\r\n      }\r\n\r\n    }\r\n    handleShare(url) {\r\n      window.open(url, '_blank')\r\n    }\r\n    render() {\r\n        console.log('details', this.state)\r\n        const { question, answersHtml, _id } = this.state\r\n        const url = 'https://twitter.com/intent/tweet?url=' +\r\n                    'http://localhost:8000/poll/details/' +\r\n                    this.props.match.params._id +\r\n                    '&text=' +\r\n                    question +\r\n                    ' - ' +\r\n                    'BVA-jccc-fcc'\r\n\r\n        return (\r\n            <Wrapper>\r\n              <WrapperLeft>\r\n                <Title>Poll Details</Title>\r\n                <Label>{question}</Label>\r\n                {answersHtml}\r\n                <InputText\r\n                    type=\"text\"\r\n                    id=\"extraInput\"\r\n                    value={this.state.extraOption}\r\n                    placeholder=\"write some other option\"\r\n                    onChange={this.handleChangeInputExtraOption}\r\n                    ref={this.extraInputRef}\r\n                />\r\n                <Button onClick={this.handleVotePoll} id=\"updateButton\" ref={this.updateButtonRef}>Vote</Button>\r\n                <CancelButton href={'/mypolls'}>Cancel</CancelButton>\r\n                <ShareButton onClick={() => this.handleShare(url)} id=\"shareButton\" ref={this.shareButtonRef}>Share on Twitter</ShareButton>\r\n              </WrapperLeft>\r\n              <WrapperRigth>\r\n                <Chart _id={_id} />\r\n              </WrapperRigth>\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PollsDetails\r\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\n\nimport { NavBar } from '../components'\nimport { PollsList, PollsInsert, PollsUpdate, MyPollsList, PollsDetails } from '../pages'\nimport api from '../api'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      authenticated: false,\n      twitterId: '',\n      ip: '',\n      user: '',\n      isLoading: false,\n    }\n  }\n  componentDidMount = async () => {\n    this.setState({\n      isLoading: true,\n    })\n    await fetch(\"/api/auth/login/success\", { // express\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        Accept:\n        \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Credentials\": true\n      }\n    })\n      .then(response => {\n        if (response.status === 200) return response.json()\n        throw new Error(\"failed to authenticate user\")\n      })\n      .then(responseJson => {\n\n        if (responseJson.success === true) {\n          this.setState({\n            authenticated: true,\n            twitterId: responseJson.user.twitterId,\n            ip: responseJson.ip,\n            user: responseJson.user,\n          })\n        } else {\n          this.setState({\n            authenticated: false,\n            twitterId: '',\n            ip: responseJson.ip,\n            user: '',\n          })\n        }\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n      this.addUserIp()\n\n      this.setState({\n        isLoading: false,\n      })\n  }\n  addUserIp = async () => {\n    const { ip } = this.state || ''\n    if (ip) {\n      const currentUser = await api.getUserByIp(ip).catch(err => console.log(err))\n      if (!currentUser) {\n        //console.log('New User')\n        const payload = {\n          ip: ip,\n          votes: [],\n        }\n        const newUser = await api.insertUser(payload).catch(err => console.log(err))\n        if (newUser) {\n          //console.log('New User created')\n        } else {\n          //console.log(\"New User don't created\")\n        }\n      } else {\n        //console.log('User exists')\n      }\n    } else {\n      //console.log('IP empty')\n    }\n  }\n  render() {\n    console.log('app', this.state)\n    const { authenticated, twitterId, ip, user, isLoading, } = this.state\n    return (\n      <Router>\n\n      {!isLoading ?\n         authenticated ?\n         (\n           <>\n            <NavBar\n              authenticated={authenticated}\n              twitterId={twitterId}\n              ip={ip}\n              user={user}\n            />\n            <Switch>\n              <Route path=\"/polls\" exact component={PollsList} />\n              <Route path=\"/poll/insert\" exact component={PollsInsert} />\n              <Route path=\"/poll/update/:_id\" exact component={PollsUpdate} />\n              <Route path=\"/poll/details/:_id\" exact component={PollsDetails} />\n              <Route path=\"/mypolls\" exact component={MyPollsList} />\n              <Redirect from=\"/\" to=\"/polls\" />\n            </Switch>\n          </>\n         )\n         :\n         (\n           <>\n            <NavBar\n              authenticated={authenticated}\n              twitterId={twitterId}\n              ip={ip}\n              user={user}\n            />\n            <Switch>\n              <Route path=\"/polls\" exact component={PollsList} />\n              <Route path=\"/poll/details/:_id\" exact component={PollsDetails} />\n              <Redirect from=\"/\" to=\"/polls\" />\n            </Switch>\n          </>\n         )\n         :\n         (\n           <div></div>\n         )\n      }\n\n      </Router>\n    )\n  }\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport App from './app'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}